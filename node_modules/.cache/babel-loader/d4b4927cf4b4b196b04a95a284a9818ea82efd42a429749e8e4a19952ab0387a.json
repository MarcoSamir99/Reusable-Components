{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prog courses\\\\New folder\\\\React\\\\1\\\\comps\\\\src\\\\components\\\\Table.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//we made this function because we cant put div inside th and we need to assign key to every element of the config so we made this function\n\nfunction Table(_ref) {\n  let {\n    data,\n    config,\n    keyFn\n  } = _ref;\n  const renderedHeaders = config.map(column => {\n    if (column.header) {\n      return /*#__PURE__*/_jsxDEV(Echo, {\n        children: column.header()\n      }, column.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"th\", {\n      children: column.label\n    }, column.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  });\n  const renderedRows = data.map(rowData => {\n    const renderedCells = config.map(column => {\n      //we made this to map over the config param and make the number of columns equal to the inserted number in the TablePage\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"p-3\",\n        children: column.render(rowData)\n      }, column.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"border-b\",\n      children: renderedCells\n    }, keyFn(rowData), false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table-auto border-spacing-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"border-b-2\",\n        children: renderedHeaders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: renderedRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["Table","_ref","data","config","keyFn","renderedHeaders","map","column","header","_jsxDEV","Echo","children","label","fileName","_jsxFileName","lineNumber","columnNumber","renderedRows","rowData","renderedCells","className","render","_c","$RefreshReg$"],"sources":["D:/Prog courses/New folder/React/1/comps/src/components/Table.js"],"sourcesContent":["  //we made this function because we cant put div inside th and we need to assign key to every element of the config so we made this function\r\n    \r\n\r\n\r\nfunction Table({ data, config, keyFn }) {\r\n\r\n    const renderedHeaders = config.map((column) => {\r\n        if (column.header) {\r\n            return <Echo key={column.label}>{column.header()}</Echo>\r\n        }\r\n        return (\r\n            <th key={column.label}>{column.label}</th>\r\n        );\r\n    })\r\n\r\n\r\n    \r\n    const renderedRows = data.map((rowData) => {\r\n\r\n        const renderedCells = config.map(( column ) => {     //we made this to map over the config param and make the number of columns equal to the inserted number in the TablePage\r\n            return <td key={column.label} className=\"p-3\">{column.render(rowData)}</td>\r\n        })\r\n \r\n        return(\r\n            <tr className=\"border-b\" key={keyFn(rowData)}>\r\n                {renderedCells}\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return (\r\n    <table className=\"table-auto border-spacing-2\">\r\n        <thead>\r\n            <tr className=\"border-b-2\">\r\n                {renderedHeaders}\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            { renderedRows }\r\n        </tbody>\r\n    </table>\r\n    );\r\n}\r\n\r\nexport default Table;"],"mappings":";;AAAE;;AAIF,SAASA,KAAKA,CAAAC,IAAA,EAA0B;EAAA,IAAzB;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAElC,MAAMI,eAAe,GAAGF,MAAM,CAACG,GAAG,CAAEC,MAAM,IAAK;IAC3C,IAAIA,MAAM,CAACC,MAAM,EAAE;MACf,oBAAOC,OAAA,CAACC,IAAI;QAAAC,QAAA,EAAqBJ,MAAM,CAACC,MAAM;MAAE,GAA9BD,MAAM,CAACK,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAA0B;IAC5D;IACA,oBACIP,OAAA;MAAAE,QAAA,EAAwBJ,MAAM,CAACK;IAAK,GAA3BL,MAAM,CAACK,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAqB;EAElD,CAAC,CAAC;EAIF,MAAMC,YAAY,GAAGf,IAAI,CAACI,GAAG,CAAEY,OAAO,IAAK;IAEvC,MAAMC,aAAa,GAAGhB,MAAM,CAACG,GAAG,CAAGC,MAAM,IAAM;MAAM;MACjD,oBAAOE,OAAA;QAAuBW,SAAS,EAAC,KAAK;QAAAT,QAAA,EAAEJ,MAAM,CAACc,MAAM,CAACH,OAAO;MAAC,GAArDX,MAAM,CAACK,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAA+C;IAC/E,CAAC,CAAC;IAEF,oBACIP,OAAA;MAAIW,SAAS,EAAC,UAAU;MAAAT,QAAA,EACnBQ;IAAa,GADYf,KAAK,CAACc,OAAO,CAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEvC;EAEb,CAAC,CAAC;EAEF,oBACAP,OAAA;IAAOW,SAAS,EAAC,6BAA6B;IAAAT,QAAA,gBAC1CF,OAAA;MAAAE,QAAA,eACIF,OAAA;QAAIW,SAAS,EAAC,YAAY;QAAAT,QAAA,EACrBN;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACf;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,eACRP,OAAA;MAAAE,QAAA,EACMM;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEZ;AAACM,EAAA,GAtCQtB,KAAK;AAwCd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}