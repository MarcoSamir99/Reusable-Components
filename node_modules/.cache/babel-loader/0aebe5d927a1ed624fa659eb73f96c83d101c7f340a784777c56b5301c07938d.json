{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prog courses\\\\New folder\\\\React\\\\1\\\\comps\\\\src\\\\components\\\\Accordion.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { GoChevronDown, GoChevronLeft } from 'react-icons/go';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Accordion(_ref) {\n  _s();\n  let {\n    items\n  } = _ref;\n  const [expandedIndex, setExpandedIndex] = useState(0);\n  const handleClick = nextIndex => {\n    //we made this outside mapping func to make map fanction easier to read\n    setExpandedIndex(nextIndex);\n  };\n  const renderedItems = items.map((item, index) => {\n    const isExpanded = index === expandedIndex;\n    const icon = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", isExpanded ? /*#__PURE__*/_jsxDEV(GoChevronDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(GoChevronLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 50\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this);\n    const content = isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 39\n    }, this); //&& makes me take the first false value or the last true one and js bu its nature dont print false, true null and undefined values\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex p-3 bg-gray-50 border-b items-center cursor\",\n        onClick: () => handleClick(index),\n        children: [icon, item.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), content]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n}\n_s(Accordion, \"tfuXMw44hKdBvvksp2O0ecqrG7g=\");\n_c = Accordion;\nexport default Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["useState","GoChevronDown","GoChevronLeft","jsxDEV","_jsxDEV","Accordion","_ref","_s","items","expandedIndex","setExpandedIndex","handleClick","nextIndex","renderedItems","map","item","index","isExpanded","icon","children","fileName","_jsxFileName","lineNumber","columnNumber","content","className","onClick","label","id","_c","$RefreshReg$"],"sources":["D:/Prog courses/New folder/React/1/comps/src/components/Accordion.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { GoChevronDown, GoChevronLeft } from 'react-icons/go';\r\n\r\nfunction Accordion({items}) { \r\n    const [expandedIndex, setExpandedIndex] = useState(0);\r\n\r\n    const handleClick = (nextIndex) => {  //we made this outside mapping func to make map fanction easier to read\r\n        setExpandedIndex(nextIndex);\r\n         \r\n    };\r\n    const renderedItems = items.map((item, index) => {\r\n        const isExpanded = index === expandedIndex;\r\n        const icon = (\r\n        <span> {isExpanded ? <GoChevronDown /> : <GoChevronLeft /> } </span>\r\n        );\r\n\r\n        const content = isExpanded && <div>{item.content}</div>;  //&& makes me take the first false value or the last true one and js bu its nature dont print false, true null and undefined values\r\n\r\n        return (\r\n            <div key={item.id }>\r\n                <div className=\"flex p-3 bg-gray-50 border-b items-center cursor\" onClick={() => handleClick(index)}>\r\n                    {icon}\r\n                    {item.label}\r\n                </div>\r\n                {content}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return <div>{renderedItems}</div>\r\n}\r\n\r\nexport default Accordion;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,SAASA,CAAAC,IAAA,EAAU;EAAAC,EAAA;EAAA,IAAT;IAACC;EAAK,CAAC,GAAAF,IAAA;EACtB,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErD,MAAMW,WAAW,GAAIC,SAAS,IAAK;IAAG;IAClCF,gBAAgB,CAACE,SAAS,CAAC;EAE/B,CAAC;EACD,MAAMC,aAAa,GAAGL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC7C,MAAMC,UAAU,GAAGD,KAAK,KAAKP,aAAa;IAC1C,MAAMS,IAAI,gBACVd,OAAA;MAAAe,QAAA,GAAM,GAAC,EAACF,UAAU,gBAAGb,OAAA,CAACH,aAAa;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,gBAAGnB,OAAA,CAACF,aAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAAE,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5D;IAED,MAAMC,OAAO,GAAGP,UAAU,iBAAIb,OAAA;MAAAe,QAAA,EAAMJ,IAAI,CAACS;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,CAAC,CAAE;;IAE1D,oBACInB,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAKqB,SAAS,EAAC,kDAAkD;QAACC,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAACK,KAAK,CAAE;QAAAG,QAAA,GAC/FD,IAAI,EACJH,IAAI,CAACY,KAAK;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT,EACLC,OAAO;IAAA,GALFT,IAAI,CAACa,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMX;EAEd,CAAC,CAAC;EAEF,oBAAOnB,OAAA;IAAAe,QAAA,EAAMN;EAAa;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AACrC;AAAChB,EAAA,CA3BQF,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA6BlB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}