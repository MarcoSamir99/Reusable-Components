{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prog courses\\\\New folder\\\\React\\\\1\\\\comps\\\\src\\\\components\\\\DropDown.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DropDown(_ref) {\n  _s();\n  let {\n    options,\n    selection,\n    onSelect\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionClick = option => {\n    setIsOpen(false);\n    onSelect(option);\n  };\n  const renderedOptions = options.map(option => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleOptionClick(option),\n      children: [option.label, \" \"]\n    }, option.value, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  });\n  let content = 'Select...';\n  if (selection) {\n    content = selection.label;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      children: \"select...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderedOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n_s(DropDown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = DropDown;\nexport default DropDown;\nvar _c;\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","DropDown","_ref","_s","options","selection","onSelect","isOpen","setIsOpen","handleClick","handleOptionClick","option","renderedOptions","map","onClick","children","label","value","fileName","_jsxFileName","lineNumber","columnNumber","content","_c","$RefreshReg$"],"sources":["D:/Prog courses/New folder/React/1/comps/src/components/DropDown.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nfunction DropDown ({ options, selection, onSelect }) {     \r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const handleOptionClick = (option) => {\r\n        setIsOpen(false);\r\n\r\n       onSelect(option);\r\n    }\r\n\r\n    const renderedOptions = options.map((option) => {\r\n     return <div onClick={() => handleOptionClick(option)} key={option.value}>{option.label} </div>;\r\n     });\r\n\r\n     let content = 'Select...';\r\n     if (selection) {\r\n        content = selection.label\r\n     }\r\n\r\n    return <div>\r\n        <div onClick={handleClick}>select...</div>\r\n        {isOpen && <div>{renderedOptions}</div>}\r\n    </div>\r\n}\r\n\r\nexport default DropDown;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,QAAQA,CAAAC,IAAA,EAAoC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EAE/C,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAED,MAAMG,iBAAiB,GAAIC,MAAM,IAAK;IAClCH,SAAS,CAAC,KAAK,CAAC;IAEjBF,QAAQ,CAACK,MAAM,CAAC;EACnB,CAAC;EAED,MAAMC,eAAe,GAAGR,OAAO,CAACS,GAAG,CAAEF,MAAM,IAAK;IAC/C,oBAAOX,OAAA;MAAKc,OAAO,EAAEA,CAAA,KAAMJ,iBAAiB,CAACC,MAAM,CAAE;MAAAI,QAAA,GAAqBJ,MAAM,CAACK,KAAK,EAAC,GAAC;IAAA,GAA7BL,MAAM,CAACM,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAuB;EAC9F,CAAC,CAAC;EAEF,IAAIC,OAAO,GAAG,WAAW;EACzB,IAAIjB,SAAS,EAAE;IACZiB,OAAO,GAAGjB,SAAS,CAACW,KAAK;EAC5B;EAED,oBAAOhB,OAAA;IAAAe,QAAA,gBACHf,OAAA;MAAKc,OAAO,EAAEL,WAAY;MAAAM,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EACzCd,MAAM,iBAAIP,OAAA;MAAAe,QAAA,EAAMH;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrC;AACV;AAAClB,EAAA,CA3BQF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA6BjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}