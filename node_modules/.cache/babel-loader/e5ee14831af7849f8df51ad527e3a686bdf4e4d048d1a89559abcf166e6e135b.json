{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prog courses\\\\New folder\\\\React\\\\1\\\\comps\\\\src\\\\pages\\\\CounterPage.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\nimport produce from \"immer\";\nimport { useReducer } from \"react\";\nimport Button from \"../components/button\";\nimport Panel from \"../components/panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    //switch is like the if condition\n    case 'increment':\n      //Without IMMER\n      // return {\n      //             ...state,\n      //             count: state.count + 1 ,\n      //         };\n\n      //FOR IMMER \n      state.count = state.count + 1;\n      return;\n    case 'change-value-to-add':\n    // return {\n    //     ...state,\n    //     valueToAdd: action.payload ,\n    // };\n\n    case 'add-value-to-count':\n      return {\n        ...state,\n        count: state.count + state.valueToAdd,\n        valueToAdd: 0\n      };\n    case 'decrement':\n      // return {\n      //     ...state,\n      //     count: state.count - 1 ,\n      // };\n\n      statcount = state.count - 1;\n      return;\n    default:\n      throw new Error('unexpected action type' + action.type);\n  }\n  ;\n};\n\n//     if (action.type === 'increment') {\n//         return {\n//             ...state,\n//             count: state.count + 1 ,\n//         }\n//     };\n\n//     if (action.type === 'change-value-to-add') {\n//         return {\n//             ...state,\n//             valueToAdd: action.payload ,\n//         }\n//     };\n\n//     if (action.type === 'add-value-to-count') {\n//         return {\n//             ...state,\n//             count: state.count + state.valueToAdd ,\n//             valueToAdd: \"\" ,\n//         }\n//     };\n\n//     if (action.type === 'decrement') {\n//         return {\n//             ...state,\n//             count: state.count - 1 ,\n//         }\n//     };\n// };\n\nfunction CounterPage(_ref) {\n  _s();\n  let {\n    initialCount\n  } = _ref;\n  // const [count, setCount] = useState(0);\n  // const [valueToAdd , setValueToAdd] = useState(0);\n  const [state, dispatch] = useReducer(produce(reducer), {\n    //produce () for immer library to make switch more easier\n    count: initialCount,\n    valueToAdd: 0\n  });\n  const increment = () => {\n    // setCount(count + 1 );\n    dispatch({\n      type: 'increment'\n    });\n  };\n  const decrement = () => {\n    // setCount(count - 1 );\n    dispatch({\n      type: 'decrement'\n    });\n  };\n  const handleChange = event => {\n    const value = parseInt(event.target.value) || 0;\n    // setValueToAdd(value); \n    dispatch({\n      type: 'change-value-to-add',\n      payload: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // setCount(count + valueToAdd);\n    // setValueToAdd(0);\n    dispatch({\n      type: 'add-value-to-count'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    className: \"m-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-lg\",\n      children: [\" count is \", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        success: true,\n        onClick: increment,\n        children: \"increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        onClick: decrement,\n        children: \"decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Add a lot!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: state.valueToAdd || \"\",\n        onChange: handleChange,\n        className: \"p-1 m-3 bg-gray-50 border border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        children: \"Add it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n_s(CounterPage, \"DGdgb3CmJ150+KOlWL2AdSWdxkA=\");\n_c = CounterPage;\nexport default CounterPage;\nvar _c;\n$RefreshReg$(_c, \"CounterPage\");","map":{"version":3,"names":["produce","useReducer","Button","Panel","jsxDEV","_jsxDEV","reducer","state","action","type","count","valueToAdd","statcount","Error","CounterPage","_ref","_s","initialCount","dispatch","increment","decrement","handleChange","event","value","parseInt","target","payload","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","success","onClick","danger","onSubmit","onChange","primary","_c","$RefreshReg$"],"sources":["D:/Prog courses/New folder/React/1/comps/src/pages/CounterPage.js"],"sourcesContent":["// import { useState } from \"react\";\r\nimport produce from \"immer\";\r\nimport { useReducer } from \"react\";\r\nimport Button from \"../components/button\";\r\nimport Panel from \"../components/panel\";\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {          //switch is like the if condition\r\n        case 'increment':\r\n            //Without IMMER\r\n            // return {\r\n            //             ...state,\r\n            //             count: state.count + 1 ,\r\n            //         };\r\n\r\n            //FOR IMMER \r\n            state.count = state.count + 1;\r\n            return;\r\n\r\n        case 'change-value-to-add':\r\n            // return {\r\n            //     ...state,\r\n            //     valueToAdd: action.payload ,\r\n            // };\r\n\r\n\r\n\r\n        case 'add-value-to-count':\r\n            return {\r\n                ...state,\r\n                count: state.count + state.valueToAdd ,\r\n                valueToAdd: 0 ,\r\n            };\r\n        \r\n        case 'decrement':\r\n            // return {\r\n            //     ...state,\r\n            //     count: state.count - 1 ,\r\n            // };\r\n\r\n            statcount = state.count - 1 ;\r\n            return;\r\n        \r\n        default: \r\n            throw new Error('unexpected action type' + action.type);\r\n        \r\n    };\r\n}\r\n\r\n//     if (action.type === 'increment') {\r\n//         return {\r\n//             ...state,\r\n//             count: state.count + 1 ,\r\n//         }\r\n//     };\r\n\r\n//     if (action.type === 'change-value-to-add') {\r\n//         return {\r\n//             ...state,\r\n//             valueToAdd: action.payload ,\r\n//         }\r\n//     };\r\n\r\n//     if (action.type === 'add-value-to-count') {\r\n//         return {\r\n//             ...state,\r\n//             count: state.count + state.valueToAdd ,\r\n//             valueToAdd: \"\" ,\r\n//         }\r\n//     };\r\n\r\n//     if (action.type === 'decrement') {\r\n//         return {\r\n//             ...state,\r\n//             count: state.count - 1 ,\r\n//         }\r\n//     };\r\n// };\r\n\r\nfunction CounterPage ({initialCount}) {\r\n    // const [count, setCount] = useState(0);\r\n    // const [valueToAdd , setValueToAdd] = useState(0);\r\n    const [state , dispatch] = useReducer(produce(reducer), {  //produce () for immer library to make switch more easier\r\n        count: initialCount,\r\n        valueToAdd: 0\r\n    })\r\n\r\n    const increment = () => {\r\n        // setCount(count + 1 );\r\n        dispatch({\r\n            type: 'increment'\r\n        });\r\n    };\r\n\r\n    const decrement = () => {\r\n        // setCount(count - 1 );\r\n        dispatch({\r\n            type: 'decrement'\r\n        });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const value = parseInt(event.target.value) || 0;\r\n        // setValueToAdd(value); \r\n        dispatch({\r\n            type: 'change-value-to-add',\r\n            payload: value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        // setCount(count + valueToAdd);\r\n        // setValueToAdd(0);\r\n         dispatch({\r\n            type: 'add-value-to-count',\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <Panel className='m-3'>\r\n            <h1 className=\"text-lg\"> count is {state.count}</h1>\r\n            <div className=\"flex flex-row\">\r\n                <Button success onClick={increment}>increment</Button>\r\n                <Button danger onClick={decrement}>decrement</Button>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Add a lot!</label>\r\n                <input type='number' value={state.valueToAdd || \"\"} onChange={handleChange} className=\"p-1 m-3 bg-gray-50 border border-gray-300\"/>\r\n                <Button primary>Add it</Button>\r\n            </form>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default CounterPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}