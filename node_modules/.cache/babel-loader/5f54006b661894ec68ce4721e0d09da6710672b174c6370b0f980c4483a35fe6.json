{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prog courses\\\\New folder\\\\React\\\\1\\\\comps\\\\src\\\\components\\\\Accordion.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Accordion(_ref) {\n  _s();\n  let {\n    items\n  } = _ref;\n  const [expandedIndex, setExpandedIndex] = useState(0);\n  const handleClick = () => {\n    setExpandedIndex(index);\n  };\n  const renderedItems = items.map((item, index) => {\n    const isExpanded = index === expandedIndex;\n    const content = isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 39\n    }, this); //&& makes me take the first false value or the last true one and js bu its nature dont print false, true null and undefined values\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleClick(index),\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), content]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n}\n_s(Accordion, \"tfuXMw44hKdBvvksp2O0ecqrG7g=\");\n_c = Accordion;\nexport default Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Accordion","_ref","_s","items","expandedIndex","setExpandedIndex","handleClick","index","renderedItems","map","item","isExpanded","content","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","label","id","_c","$RefreshReg$"],"sources":["D:/Prog courses/New folder/React/1/comps/src/components/Accordion.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Accordion({items}) { \r\n    const [expandedIndex, setExpandedIndex] = useState(0);\r\n\r\n    const handleClick = () => {\r\n        setExpandedIndex(index);\r\n         \r\n    };\r\n    const renderedItems = items.map((item, index) => {\r\n        const isExpanded = index === expandedIndex;\r\n\r\n        const content = isExpanded && <div>{item.content}</div>;  //&& makes me take the first false value or the last true one and js bu its nature dont print false, true null and undefined values\r\n\r\n        return (\r\n            <div key={item.id }>\r\n                <div onClick={() => handleClick(index)}>{item.label}</div>\r\n                {content}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return <div>{renderedItems}</div>\r\n}\r\n\r\nexport default Accordion;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,SAASA,CAAAC,IAAA,EAAU;EAAAC,EAAA;EAAA,IAAT;IAACC;EAAK,CAAC,GAAAF,IAAA;EACtB,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErD,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtBD,gBAAgB,CAACE,KAAK,CAAC;EAE3B,CAAC;EACD,MAAMC,aAAa,GAAGL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEH,KAAK,KAAK;IAC7C,MAAMI,UAAU,GAAGJ,KAAK,KAAKH,aAAa;IAE1C,MAAMQ,OAAO,GAAGD,UAAU,iBAAIZ,OAAA;MAAAc,QAAA,EAAMH,IAAI,CAACE;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,CAAC,CAAE;;IAE1D,oBACIlB,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAKmB,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAACC,KAAK,CAAE;QAAAM,QAAA,EAAEH,IAAI,CAACS;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,EACzDL,OAAO;IAAA,GAFFF,IAAI,CAACU,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGX;EAEd,CAAC,CAAC;EAEF,oBAAOlB,OAAA;IAAAc,QAAA,EAAML;EAAa;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AACrC;AAACf,EAAA,CArBQF,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAuBlB,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}